{"version":3,"file":"useClickableProps.js","sources":["../../../../../src/hooks/useClickableProps/useClickableProps.ts"],"sourcesContent":["import { useKeyboardButtonPressedFunc } from \"../useKeyboardButtonPressedFunc\";\nimport React, { useRef } from \"react\";\nimport useMergeRef from \"../useMergeRef\";\nimport { getTestId } from \"../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../tests/constants\";\nimport { ClickableProps } from \"../../components/Clickable/Clickable\";\nimport { NOOP } from \"../../utils/function-utils\";\n\n/**\n * Return props for adding clickable functionality to the element except for the styles and classNames\n */\nexport default function useClickableProps(\n  {\n    onClick = NOOP,\n    onMouseDown = NOOP,\n    onMouseEnter = NOOP,\n    onMouseLeave = NOOP,\n    disabled = false,\n    id,\n    \"data-testid\": dataTestId,\n    role = \"button\",\n    tabIndex = 0,\n    ariaLabel,\n    ariaHidden,\n    ariaHasPopup,\n    ariaExpanded\n  }: ClickableProps,\n  ref: React.ForwardedRef<HTMLElement>\n) {\n  const onKeyDown = useKeyboardButtonPressedFunc(onClick);\n  const componentRef = useRef<HTMLElement | null>(null);\n  const mergedRef = useMergeRef(ref, componentRef);\n  // Remove when ariaHasPopup is no longer a string\n  const overrideAriaHasPopup = ariaHasPopup === undefined ? undefined : !!ariaHasPopup;\n\n  return {\n    ref: mergedRef,\n    id,\n    \"data-testid\": dataTestId || getTestId(ComponentDefaultTestId.CLICKABLE, id),\n    onClick: disabled ? undefined : onClick,\n    onKeyDown: disabled ? undefined : onKeyDown,\n    onMouseDown,\n    onMouseEnter,\n    onMouseLeave,\n    tabIndex: disabled ? -1 : Number(tabIndex),\n    role,\n    \"aria-label\": ariaLabel,\n    \"aria-hidden\": ariaHidden,\n    \"aria-haspopup\": overrideAriaHasPopup,\n    \"aria-expanded\": ariaExpanded\n  };\n}\n"],"names":["useClickableProps","_ref","ref","_ref$onClick","onClick","NOOP","_ref$onMouseDown","onMouseDown","_ref$onMouseEnter","onMouseEnter","_ref$onMouseLeave","onMouseLeave","_ref$disabled","disabled","id","dataTestId","_ref$role","role","_ref$tabIndex","tabIndex","ariaLabel","ariaHidden","ariaHasPopup","ariaExpanded","onKeyDown","useKeyboardButtonPressedFunc","componentRef","useRef","overrideAriaHasPopup","undefined","useMergeRef","getTestId","ComponentDefaultTestId","CLICKABLE","Number"],"mappings":"4TAWwB,SAAAA,EAAiBC,EAgBvCC,GAAoC,IAAAC,EAAAF,EAdlCG,QAAAA,OAAUC,IAAHF,EAAGE,EAAIF,EAAAG,EAAAL,EACdM,YAAAA,OAAcF,IAAHC,EAAGD,EAAIC,EAAAE,EAAAP,EAClBQ,aAAAA,OAAeJ,IAAHG,EAAGH,EAAIG,EAAAE,EAAAT,EACnBU,aAAAA,OAAeN,IAAHK,EAAGL,EAAIK,EAAAE,EAAAX,EACnBY,SAAAA,OAAW,IAAHD,GAAQA,EAChBE,EAAEb,EAAFa,GACeC,EAAUd,EAAzB,eAAae,EAAAf,EACbgB,KAAAA,OAAO,IAAHD,EAAG,SAAQA,EAAAE,EAAAjB,EACfkB,SAAAA,OAAW,IAAHD,EAAG,EAACA,EACZE,EAASnB,EAATmB,UACAC,EAAUpB,EAAVoB,WACAC,EAAYrB,EAAZqB,aACAC,EAAYtB,EAAZsB,aAIIC,EAAYC,EAA6BrB,GACzCsB,EAAeC,EAA2B,MAG1CC,OAAwCC,IAAjBP,OAA6BO,IAAcP,EAExE,MAAO,CACLpB,IALgB4B,EAAY5B,EAAKwB,GAMjCZ,GAAAA,EACA,cAAeC,GAAcgB,EAAUC,EAAuBC,UAAWnB,GACzEV,QAASS,OAAWgB,EAAYzB,EAChCoB,UAAWX,OAAWgB,EAAYL,EAClCjB,YAAAA,EACAE,aAAAA,EACAE,aAAAA,EACAQ,SAAUN,GAAY,EAAIqB,OAAOf,GACjCF,KAAAA,EACA,aAAcG,EACd,cAAeC,EACf,gBAAiBO,EACjB,gBAAiBL,EAErB"}