{"version":3,"file":"Table.js","sources":["../../../../../../src/components/Table/Table/Table.tsx"],"sourcesContent":["import React, { forwardRef, ReactElement, UIEventHandler, useCallback, useMemo, useRef, useState } from \"react\";\nimport cx from \"classnames\";\nimport { SubIcon, VibeComponent, VibeComponentProps, withStaticProps } from \"../../../types\";\nimport { TableHeaderProps } from \"../TableHeader/TableHeader\";\nimport { TableBodyProps } from \"../TableBody/TableBody\";\nimport { getTableRowLayoutStyles } from \"./tableHelpers\";\nimport { getTestId } from \"../../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../../tests/constants\";\nimport { RowHeights, RowSizes as RowSizesEnum } from \"./TableConsts\";\nimport { RowSizes } from \"./Table.types\";\nimport styles from \"./Table.module.scss\";\nimport { TableProvider } from \"../context/TableContext/TableContext\";\nimport { TableRowMenuProvider } from \"../context/TableRowMenuContext/TableRowMenuContext\";\nimport useMergeRef from \"../../../hooks/useMergeRef\";\nimport { TableProviderValue } from \"../context/TableContext/TableContext.types\";\nimport { TableRowMenuProviderValue } from \"../context/TableRowMenuContext/TableRowMenuContext.types\";\n\nexport type TableLoadingStateType = \"long-text\" | \"medium-text\" | \"circle\" | \"rectangle\";\n\ntype Width = number | `${number}%` | `${number}px` | `${number}fr`;\n\nexport interface TableColumn {\n  id: string;\n  title: string;\n  infoContent?: string;\n  width?: Width | { min: Width; max: Width };\n  icon?: SubIcon;\n  loadingStateType?: TableLoadingStateType;\n}\n\nexport interface TableProps extends VibeComponentProps {\n  columns: TableColumn[];\n  dataState?: {\n    isLoading?: boolean;\n    isError?: boolean;\n  };\n  errorState: ReactElement;\n  emptyState: ReactElement;\n  style?: React.CSSProperties;\n  children?:\n    | ReactElement<TableHeaderProps>\n    | ReactElement<TableBodyProps>\n    | Array<ReactElement<TableHeaderProps> | ReactElement<TableBodyProps>>;\n  size?: RowSizes;\n  withoutBorder?: boolean;\n}\n\nconst Table: VibeComponent<TableProps, HTMLDivElement> & {\n  sizes?: typeof RowSizesEnum;\n} = forwardRef(\n  (\n    {\n      id,\n      className,\n      \"data-testid\": dataTestId,\n      columns,\n      errorState,\n      emptyState,\n      dataState,\n      style,\n      children,\n      size = \"medium\",\n      withoutBorder\n    }: TableProps,\n    ref\n  ) => {\n    const tableRootRef = useRef<HTMLDivElement>(null);\n    const mergedRef = useMergeRef(ref, tableRootRef);\n\n    const [isMenuOpen, setIsMenuOpen] = useState<boolean>(false);\n    const [hoveredRowRef, setHoveredRowRef] = useState<React.RefObject<HTMLDivElement>>(null);\n\n    const resetHoveredRow = useCallback(() => {\n      setIsMenuOpen(false);\n      setHoveredRowRef(null);\n    }, []);\n\n    const [isVirtualized, setIsVirtualized] = useState<boolean>(false);\n    const markTableAsVirtualized = useCallback(() => {\n      setIsVirtualized(true);\n    }, []);\n\n    const [isScrolled, setIsScrolled] = useState<boolean>(false);\n\n    const onScroll = useCallback<UIEventHandler<HTMLDivElement>>(\n      e => {\n        resetHoveredRow();\n        if (!isVirtualized) {\n          const newLeft = (e.target as HTMLDivElement).scrollLeft;\n          const hasScroll = newLeft > 0;\n          setIsScrolled(prevScroll => (prevScroll !== hasScroll ? hasScroll : prevScroll));\n        }\n      },\n      [resetHoveredRow, isVirtualized]\n    );\n\n    const { gridTemplateColumns } = getTableRowLayoutStyles(columns);\n\n    /**\n     * The `--table-grid-template-columns` and `--table-row-size` variables will be available under each <Table /> scope\n     * and will be consumed in the stylesheets of its children (<TableHeader />, <TableRow />, <TableHeaderCell />)\n     */\n    const calculatedStyle = {\n      \"--table-grid-template-columns\": gridTemplateColumns,\n      \"--table-row-size\": `${RowHeights[size]}px`,\n      ...style\n    } as React.CSSProperties;\n\n    const tableProviderValue = useMemo<TableProviderValue>(\n      () => ({\n        columns,\n        dataState,\n        emptyState,\n        errorState,\n        size,\n        tableRootRef,\n        isVirtualized,\n        markTableAsVirtualized,\n        isScrolled,\n        setIsScrolled: (scrollLeft: boolean) => setIsScrolled(scrollLeft)\n      }),\n      [columns, dataState, emptyState, errorState, isVirtualized, markTableAsVirtualized, isScrolled, size]\n    );\n\n    const tableRowMenuProviderValue = useMemo<TableRowMenuProviderValue>(\n      () => ({\n        tableRootRef,\n        hoveredRowRef,\n        isMenuOpen,\n        resetHoveredRow,\n        setHoveredRowRef: (rowRef: React.RefObject<HTMLDivElement>) => setHoveredRowRef(rowRef),\n        setIsMenuOpen: (isOpen: boolean) => setIsMenuOpen(isOpen)\n      }),\n      [hoveredRowRef, isMenuOpen, resetHoveredRow, setHoveredRowRef]\n    );\n\n    return (\n      <TableProvider value={tableProviderValue}>\n        <TableRowMenuProvider value={tableRowMenuProviderValue}>\n          <div\n            ref={mergedRef}\n            id={id}\n            className={cx(\n              styles.table,\n              {\n                [styles.border]: !withoutBorder,\n                [styles.virtualized]: isVirtualized,\n                [styles.hasScroll]: isScrolled\n              },\n              className\n            )}\n            data-testid={dataTestId || getTestId(ComponentDefaultTestId.TABLE, id)}\n            role=\"table\"\n            style={calculatedStyle}\n            onScroll={onScroll}\n          >\n            {children}\n          </div>\n        </TableRowMenuProvider>\n      </TableProvider>\n    );\n  }\n);\n\nexport default withStaticProps(Table, { sizes: RowSizesEnum });\n"],"names":["withStaticProps","forwardRef","_ref","ref","id","className","dataTestId","columns","errorState","emptyState","dataState","style","children","_ref$size","size","withoutBorder","tableRootRef","useRef","mergedRef","useMergeRef","_useState","useState","_useState2","_slicedToArray","isMenuOpen","setIsMenuOpen","_useState3","_useState4","hoveredRowRef","setHoveredRowRef","resetHoveredRow","useCallback","_useState5","_useState6","isVirtualized","setIsVirtualized","markTableAsVirtualized","_useState7","_useState8","isScrolled","setIsScrolled","onScroll","e","hasScroll","target","scrollLeft","prevScroll","_getTableRowLayoutSty","getTableRowLayoutStyles","calculatedStyle","Object","assign","gridTemplateColumns","concat","RowHeights","tableProviderValue","useMemo","tableRowMenuProviderValue","rowRef","isOpen","React","createElement","TableProvider","value","TableRowMenuProvider","cx","styles","table","_defineProperty","border","virtualized","getTestId","ComponentDefaultTestId","TABLE","role","sizes","RowSizesEnum"],"mappings":"uzBA+CA,IAqHeA,EAAAA,EAnHXC,GACF,SAAAC,EAcEC,GACE,IAbAC,EAAEF,EAAFE,GACAC,EAASH,EAATG,UACeC,EAAUJ,EAAzB,eACAK,EAAOL,EAAPK,QACAC,EAAUN,EAAVM,WACAC,EAAUP,EAAVO,WACAC,EAASR,EAATQ,UACAC,EAAKT,EAALS,MACAC,EAAQV,EAARU,SAAQC,EAAAX,EACRY,KAAAA,OAAO,IAAHD,EAAG,SAAQA,EACfE,EAAab,EAAba,cAIIC,EAAeC,EAAuB,MACtCC,EAAYC,EAAYhB,EAAKa,GAEnCI,EAAoCC,GAAkB,GAAMC,EAAAC,EAAAH,EAAA,GAArDI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,EAA0CL,EAA0C,MAAKM,EAAAJ,EAAAG,EAAA,GAAlFE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEhCG,EAAkBC,GAAY,WAClCN,GAAc,GACdI,EAAiB,KAClB,GAAE,IAEHG,EAA0CX,GAAkB,GAAMY,EAAAV,EAAAS,EAAA,GAA3DE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAChCG,EAAyBL,GAAY,WACzCI,GAAiB,EAClB,GAAE,IAEHE,EAAoChB,GAAkB,GAAMiB,EAAAf,EAAAc,EAAA,GAArDE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAE1BG,EAAWV,GACf,SAAAW,GAEE,GADAZ,KACKI,EAAe,CAClB,IACMS,EADWD,EAAEE,OAA0BC,WACjB,EAC5BL,GAAc,SAAAM,GAAU,OAAKA,IAAeH,EAAYA,EAAYG,CAAU,GAC/E,CACH,GACA,CAAChB,EAAiBI,IAGpBa,EAAgCC,EAAwBzC,GAMlD0C,EAAkBC,OAAAC,OAAA,CACtB,gCAPyBJ,EAAnBK,oBAQN,sBAAkBC,OAAKC,EAAWxC,GAAK,OACpCH,GAGC4C,EAAqBC,GACzB,WAAA,MAAO,CACLjD,QAAAA,EACAG,UAAAA,EACAD,WAAAA,EACAD,WAAAA,EACAM,KAAAA,EACAE,aAAAA,EACAkB,cAAAA,EACAE,uBAAAA,EACAG,WAAAA,EACAC,cAAe,SAACK,GAAmB,OAAKL,EAAcK,EAAW,EAClE,GACD,CAACtC,EAASG,EAAWD,EAAYD,EAAY0B,EAAeE,EAAwBG,EAAYzB,IAG5F2C,GAA4BD,GAChC,WAAA,MAAO,CACLxC,aAAAA,EACAY,cAAAA,EACAJ,WAAAA,EACAM,gBAAAA,EACAD,iBAAkB,SAAC6B,GAAuC,OAAK7B,EAAiB6B,EAAO,EACvFjC,cAAe,SAACkC,GAAe,OAAKlC,EAAckC,EAAO,EACzD,GACF,CAAC/B,EAAeJ,EAAYM,EAAiBD,IAG/C,OACE+B,EAACC,cAAAC,EAAc,CAAAC,MAAOR,GACpBK,EAAAC,cAACG,EAAoB,CAACD,MAAON,IAC3BG,EAAAC,cAAA,MAAA,CACE1D,IAAKe,EACLd,GAAIA,EACJC,UAAW4D,EACTC,EAAOC,MAAKC,EAAAA,EAAAA,EAAA,CAAA,EAETF,EAAOG,QAAUtD,GACjBmD,EAAOI,YAAcpC,GACrBgC,EAAOvB,UAAYJ,GAEtBlC,GAEW,cAAAC,GAAciE,EAAUC,EAAuBC,MAAOrE,GACnEsE,KAAK,QACL/D,MAAOsC,EACPR,SAAUA,GAET7B,IAKX,IAGoC,CAAE+D,MAAOC"}