{"version":3,"file":"Dialog.js","sources":["../../../../../src/components/Dialog/Dialog.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport React, { PureComponent, ReactElement } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { Manager, Modifier, Popper, Reference } from \"react-popper\";\nimport { isFunction } from \"lodash-es\";\nimport { chainFunctions, convertToArray, NOOP } from \"../../utils/function-utils\";\nimport { DialogContent } from \"./DialogContent/DialogContent\";\nimport { isInsideClass } from \"../../utils/dom-utils\";\nimport { Refable } from \"../Refable/Refable\";\nimport {\n  AnimationType as AnimationTypeEnum,\n  HideShowEvent as DialogTriggerEventEnum,\n  DialogPosition as DialogPositionEnum\n} from \"./DialogConstants\";\nimport { VibeComponentProps } from \"../../types\";\nimport * as PopperJS from \"@popperjs/core\";\nimport styles from \"./Dialog.module.scss\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport { DialogAnimationType, DialogPosition, DialogTriggerEvent } from \"./Dialog.types\";\nimport LayerContext from \"../LayerProvider/LayerContext\";\nimport { isClient } from \"../../utils/ssr-utils\";\nimport { createObserveContentResizeModifier } from \"./modifiers/observeContentResizeModifier\";\n\nexport interface DialogProps extends VibeComponentProps {\n  /**\n   * A Classname to be added to <span> element which wraps the children\n   */\n  referenceWrapperClassName?: string;\n  /**\n   * Where the dialog should be in reference to the children,\n   * Top, Left, Right, Bottom ...\n   */\n  position?: DialogPosition;\n  /**\n   * PopperJS Modifiers type\n   * https://popper.js.org/docs/v2/modifiers/\n   */\n  modifiers?: Modifier<any>[];\n  startingEdge?: string;\n  /**\n   * How much to move the dialog in relative to children\n   * main is the axis in which the position is aligned to\n   * secondary is the vertical axes to the position\n   */\n  moveBy?: { main?: number; secondary?: number };\n  /**\n   * how much delay should the Dialog wait until it should trigger the show in MS\n   */\n  showDelay?: number;\n  /**\n   * how much delay should the Dialog wait until it should trigger the hide in MS\n   */\n  hideDelay?: number;\n  /**\n   * an array of hide/show trigger -\n   */\n  showTrigger?: DialogTriggerEvent | DialogTriggerEvent[];\n  /**\n   * an array of hide/show trigger -\n   */\n  hideTrigger?: DialogTriggerEvent | DialogTriggerEvent[];\n  /**\n   * If true, prevents opened Dialog from closing on mouseEnter, and closes Dialog when mouse leaves it\n   */\n  showOnDialogEnter?: boolean;\n  /**\n   * Show the Dialog when the children are mounting\n   */\n  shouldShowOnMount?: boolean;\n  /**\n   * disable the opening of the dialog\n   */\n  disable?: boolean;\n  /**\n   * open is a controlled prop to open the dialog\n   */\n  open?: boolean;\n  /**\n   * used when state is derived from props\n   */\n  isOpen?: boolean;\n  /**\n   * if this class exists on the children the show trigger will be ignored\n   */\n  showTriggerIgnoreClass?: string | Array<string>;\n  /**\n   * if this class exists on the children the hide trigger will be ignored\n   */\n  hideTriggerIgnoreClass?: string | Array<string>;\n  /**\n   * Dialog animation type\n   */\n  animationType?: DialogAnimationType;\n  /**\n   * Classname to be added to the content container\n   */\n  wrapperClassName?: string;\n  /**\n   * Prevent Animation\n   */\n  preventAnimationOnMount?: boolean;\n  /**\n   * the container selector in which to append the dialog\n   * for examples: \"body\" , \".my-class\", \"#my-id\"\n   */\n  containerSelector?: string;\n  /**\n   * should position the tooltip element\n   * https://popper.js.org/docs/v2/modifiers/arrow/\n   */\n  tooltip?: boolean;\n  /**\n   * class name to add to the tooltip element\n   */\n  tooltipClassName?: string;\n  /**\n   * callback to be called when the dialog is shown\n   */\n  onDialogDidShow?: (event?: DialogEvent, eventName?: DialogTriggerEvent | string) => void;\n  /**\n   * callback to be called when the dialog is hidden\n   */\n  onDialogDidHide?: (event: DialogEvent, eventName: DialogTriggerEvent | string) => void;\n  /**\n   * callback to be called when click outside is being triggered\n   */\n  onClickOutside?: (event: React.MouseEvent) => void;\n  /**\n   * callback to be called when click on the content is being triggered\n   */\n  onContentClick?: (event: React.MouseEvent) => void;\n  /**\n   * z-index to add to the dialog\n   */\n  zIndex?: number;\n  useDerivedStateFromProps?: boolean;\n  /**\n   * Make the dialog disappear when the element it is attached to becomes hidden\n   */\n  hideWhenReferenceHidden?: boolean;\n  shouldCallbackOnMount?: boolean;\n  instantShowAndHide?: boolean;\n  getDynamicShowDelay?: () => { showDelay: number; preventAnimation: boolean };\n  content?: (() => JSX.Element) | JSX.Element;\n  /**\n   * The element where we will position the dialog beside.\n   */\n  children?: ReactElement | ReactElement[] | string;\n  /**\n   * Treats keyboard focus/blur events as mouse-enter/mouse-leave events\n   */\n  addKeyboardHideShowTriggersByDefault?: boolean;\n  /**\n   * If true disable the scroll for the containerSelector element.\n   * If string use it as selector to prevent scroll.\n   */\n  disableContainerScroll?: boolean | string;\n  /**\n   * Enables the observation of content resize for the popper element.\n   * When set to `true`, a ResizeObserver is attached to the popper content,\n   * automatically triggering repositioning when the size of the content changes.\n   *\n   * This is useful for dialogs, tooltips, or popovers with dynamic content\n   * that may grow or shrink without a re-render being triggered.\n   */\n  observeContentResize?: boolean;\n}\n\nexport interface DialogState {\n  isOpen?: boolean;\n  shouldUseDerivedStateFromProps?: boolean;\n  preventAnimation?: boolean;\n}\n\nexport type DialogEvent = React.MouseEvent | React.KeyboardEvent | KeyboardEvent | React.FocusEvent | CustomEvent;\n\nexport default class Dialog extends PureComponent<DialogProps, DialogState> {\n  static hideShowTriggers = DialogTriggerEventEnum;\n  static positions = DialogPositionEnum;\n  static animationTypes = AnimationTypeEnum;\n  static defaultProps = {\n    position: \"top\",\n    modifiers: [] as Modifier<any>[],\n    moveBy: { main: 0, secondary: 0 },\n    showDelay: 100,\n    hideDelay: 100,\n    showTrigger: Dialog.hideShowTriggers.MOUSE_ENTER,\n    hideTrigger: Dialog.hideShowTriggers.MOUSE_LEAVE,\n    showOnDialogEnter: false,\n    shouldShowOnMount: false,\n    disable: false,\n    open: false,\n    animationType: Dialog.animationTypes.EXPAND,\n    preventAnimationOnMount: false,\n    tooltip: false,\n    onDialogDidShow: NOOP,\n    onDialogDidHide: NOOP,\n    onClickOutside: NOOP,\n    onContentClick: NOOP,\n    useDerivedStateFromProps: false,\n    hideWhenReferenceHidden: false,\n    shouldCallbackOnMount: false,\n    instantShowAndHide: false,\n    addKeyboardHideShowTriggersByDefault: false,\n    observeContentResize: false\n  };\n  private showTimeout: NodeJS.Timeout;\n  private hideTimeout: NodeJS.Timeout;\n  context!: React.ContextType<typeof LayerContext>;\n\n  constructor(props: DialogProps) {\n    super(props);\n    this.state = {\n      shouldUseDerivedStateFromProps: props.useDerivedStateFromProps,\n      isOpen: props.shouldShowOnMount\n    };\n\n    // Binding section.\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseLeave = this.onMouseLeave.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.isShown = this.isShown.bind(this);\n    this.onEsc = this.onEsc.bind(this);\n    this.onClickOutside = this.onClickOutside.bind(this);\n    this.onDialogEnter = this.onDialogEnter.bind(this);\n    this.onDialogLeave = this.onDialogLeave.bind(this);\n    this.getContainer = this.getContainer.bind(this);\n    this.onContentClick = this.onContentClick.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.closeDialogOnEscape = this.closeDialogOnEscape.bind(this);\n    this.onContextMenu = this.onContextMenu.bind(this);\n\n    // Timeouts\n    this.hideTimeout = null;\n    this.showTimeout = null;\n  }\n\n  closeDialogOnEscape(event: KeyboardEvent) {\n    const { isOpen } = this.state;\n    if (!isOpen) {\n      return;\n    }\n    switch (event.key) {\n      case \"Escape\":\n        this.hideDialogIfNeeded(event, DialogTriggerEventEnum.ESCAPE_KEY);\n        break;\n      case \"Tab\":\n        this.handleEvent(DialogTriggerEventEnum.TAB_KEY, event.target, event);\n        break;\n      case \"Enter\":\n        this.handleEvent(DialogTriggerEventEnum.ENTER, event.target, event);\n        break;\n      default:\n        break;\n    }\n  }\n\n  componentDidMount() {\n    const { shouldCallbackOnMount, onDialogDidShow } = this.props;\n    const { isOpen } = this.state;\n    if (isClient()) {\n      document.addEventListener(\"keyup\", this.closeDialogOnEscape);\n    }\n    if (shouldCallbackOnMount && isOpen) {\n      onDialogDidShow && onDialogDidShow();\n    }\n  }\n\n  componentWillUnmount() {\n    if (isClient()) {\n      document.removeEventListener(\"keyup\", this.closeDialogOnEscape);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps: DialogProps, state: DialogState): DialogState {\n    if (state.shouldUseDerivedStateFromProps) {\n      return { isOpen: nextProps.isOpen };\n    }\n    return null;\n  }\n\n  getContainer() {\n    const { containerSelector } = this.props;\n    const containerElement = document.querySelector(containerSelector);\n    if (!containerElement || !(containerElement instanceof Element)) {\n      const { layerRef } = this.context;\n      if (layerRef?.current) {\n        return layerRef.current;\n      }\n      return document.body;\n    }\n    return containerElement;\n  }\n\n  showDialog(event: DialogEvent, eventName: DialogTriggerEvent | string, options: { preventAnimation?: boolean } = {}) {\n    const { showDelay, instantShowAndHide, getDynamicShowDelay } = this.props;\n    let finalShowDelay = showDelay;\n    let preventAnimation = options.preventAnimation;\n    if (getDynamicShowDelay) {\n      const dynamicDelayObj = getDynamicShowDelay();\n      finalShowDelay = dynamicDelayObj.showDelay || 0;\n      preventAnimation = preventAnimation || dynamicDelayObj.preventAnimation;\n    }\n\n    if (instantShowAndHide) {\n      this.onShowDialog(event, eventName);\n      this.setState({ isOpen: true, preventAnimation });\n      this.showTimeout = null;\n    } else {\n      this.showTimeout = setTimeout(() => {\n        this.onShowDialog(event, eventName);\n        this.showTimeout = null;\n        this.setState({ isOpen: true, preventAnimation });\n      }, finalShowDelay);\n    }\n  }\n\n  onShowDialog(event: DialogEvent, eventName: DialogTriggerEvent | string) {\n    if (this.isShown()) return;\n    const { onDialogDidShow } = this.props;\n    onDialogDidShow(event, eventName);\n  }\n\n  showDialogIfNeeded(event: DialogEvent, eventName: DialogTriggerEvent | string, options = {}) {\n    const { disable } = this.props;\n    if (disable) {\n      return;\n    }\n\n    if (this.hideTimeout) {\n      clearTimeout(this.hideTimeout);\n      this.hideTimeout = null;\n    }\n\n    if (!this.showTimeout) {\n      this.showDialog(event, eventName, options);\n    }\n  }\n\n  hideDialog(event: DialogEvent, eventName: DialogTriggerEvent | string) {\n    const { hideDelay, instantShowAndHide } = this.props;\n    if (instantShowAndHide) {\n      this.onHideDialog(event, eventName);\n      this.setState({ isOpen: false });\n      this.hideTimeout = null;\n    } else {\n      this.hideTimeout = setTimeout(() => {\n        this.onHideDialog(event, eventName);\n        this.setState({ isOpen: false });\n        this.hideTimeout = null;\n      }, hideDelay);\n    }\n  }\n\n  onHideDialog(event: DialogEvent, eventName: DialogTriggerEvent | string) {\n    const { onDialogDidHide } = this.props;\n    if (onDialogDidHide) onDialogDidHide(event, eventName);\n  }\n\n  hideDialogIfNeeded(event: DialogEvent, eventName: DialogTriggerEvent | string) {\n    if (this.showTimeout) {\n      clearTimeout(this.showTimeout);\n      this.showTimeout = null;\n    }\n\n    if (this.hideTimeout) {\n      return;\n    }\n    this.hideDialog(event, eventName);\n  }\n\n  handleEvent(eventName: DialogTriggerEvent, target: EventTarget, event: DialogEvent) {\n    const { showTriggerIgnoreClass, hideTriggerIgnoreClass } = this.props;\n    if (\n      this.isShowTrigger(eventName) &&\n      !this.isShown() &&\n      !isInsideClass(target as HTMLElement, showTriggerIgnoreClass)\n    ) {\n      return this.showDialogIfNeeded(event, eventName);\n    }\n\n    if (this.isHideTrigger(eventName) && !isInsideClass(target as HTMLElement, hideTriggerIgnoreClass)) {\n      return this.hideDialogIfNeeded(event, eventName);\n    }\n  }\n\n  isShown() {\n    const { isOpen } = this.state;\n    const { open } = this.props;\n\n    return isOpen || open;\n  }\n\n  isShowTrigger(eventName: DialogTriggerEvent) {\n    const { showTrigger, addKeyboardHideShowTriggersByDefault } = this.props;\n    const showTriggersArray = convertToArray(showTrigger);\n\n    if (addKeyboardHideShowTriggersByDefault) {\n      if (eventName === \"focus\" && showTriggersArray.indexOf(\"mouseenter\") > -1) {\n        return true;\n      }\n    }\n\n    return showTriggersArray.indexOf(eventName) > -1;\n  }\n\n  isHideTrigger(eventName: DialogTriggerEvent) {\n    const { hideTrigger, addKeyboardHideShowTriggersByDefault } = this.props;\n    const hideTriggersArray = convertToArray(hideTrigger);\n\n    if (addKeyboardHideShowTriggersByDefault) {\n      if (eventName === \"blur\" && hideTriggersArray.indexOf(\"mouseleave\") > -1) {\n        return true;\n      }\n    }\n\n    return hideTriggersArray.indexOf(eventName) > -1;\n  }\n\n  onMouseEnter(e: React.MouseEvent) {\n    this.handleEvent(\"mouseenter\", e.target, e);\n  }\n\n  onMouseLeave(e: React.MouseEvent) {\n    this.handleEvent(\"mouseleave\", e.target, e);\n  }\n\n  onClick(e: React.MouseEvent) {\n    if (e.button) return;\n    this.handleEvent(\"click\", e.target, e);\n  }\n\n  onKeyDown(event: React.KeyboardEvent) {\n    if (event.key === \"Enter\") {\n      this.handleEvent(\"enter\", event.target, event);\n    }\n\n    if (event.key === \"Tab\") {\n      this.handleEvent(\"tab\", event.target, event);\n    }\n  }\n\n  onMouseDown(e: React.MouseEvent) {\n    if (e.button) return;\n    this.handleEvent(\"mousedown\", e.target, e);\n  }\n\n  onFocus(e: React.FocusEvent) {\n    this.handleEvent(\"focus\", e.target, e);\n  }\n\n  onBlur(e: React.FocusEvent) {\n    this.handleEvent(\"blur\", e.relatedTarget, e);\n  }\n\n  onEsc(e: React.KeyboardEvent) {\n    this.handleEvent(\"esckey\", e.target, e);\n  }\n\n  onContextMenu(e: React.MouseEvent) {\n    const isShown = this.isShown();\n    if ((this.isShowTrigger(\"contextmenu\") && !isShown) || (this.isHideTrigger(\"contextmenu\") && isShown)) {\n      e.preventDefault();\n    }\n    this.handleEvent(\"contextmenu\", e.target, e);\n  }\n\n  onClickOutside(event: React.MouseEvent) {\n    const { onClickOutside } = this.props;\n    this.handleEvent(\"clickoutside\", event.target, event);\n    onClickOutside(event);\n  }\n\n  onDialogEnter(event: React.MouseEvent) {\n    const { showOnDialogEnter } = this.props;\n    if (showOnDialogEnter) this.showDialogIfNeeded(event, \"DialogEnter\");\n  }\n\n  onDialogLeave(event: React.MouseEvent) {\n    const { showOnDialogEnter } = this.props;\n    if (showOnDialogEnter) this.hideDialogIfNeeded(event, \"DialogLeave\");\n  }\n\n  onContentClick(e: React.MouseEvent) {\n    const { onContentClick } = this.props;\n    this.handleEvent(\"onContentClick\", e.target, e);\n    onContentClick(e);\n  }\n\n  render() {\n    const {\n      wrapperClassName,\n      content,\n      startingEdge,\n      children,\n      preventAnimationOnMount,\n      animationType,\n      position,\n      showDelay,\n      moveBy,\n      modifiers,\n      tooltip,\n      tooltipClassName,\n      referenceWrapperClassName,\n      zIndex,\n      hideWhenReferenceHidden,\n      disableContainerScroll,\n      containerSelector,\n      observeContentResize,\n      id,\n      \"data-testid\": dataTestId\n    } = this.props;\n    const { preventAnimation } = this.state;\n    const overrideDataTestId = dataTestId || getTestId(ComponentDefaultTestId.DIALOG, id);\n\n    const animationTypeCalculated = preventAnimationOnMount || preventAnimation ? undefined : animationType;\n    const contentRendered = isFunction(content) ? content() : content;\n\n    if (!contentRendered) {\n      return children;\n    }\n    return (\n      <Manager>\n        <Reference>\n          {({ ref }) => {\n            return (\n              <Refable\n                className={cx(referenceWrapperClassName)}\n                ref={ref}\n                onBlur={chainOnPropsAndInstance(\"onBlur\", this, this.props)}\n                onKeyDown={chainOnPropsAndInstance(\"onKeyDown\", this, this.props)}\n                onClick={chainOnPropsAndInstance(\"onClick\", this, this.props)}\n                onFocus={chainOnPropsAndInstance(\"onFocus\", this, this.props)}\n                onMouseDown={chainOnPropsAndInstance(\"onMouseDown\", this, this.props)}\n                onMouseEnter={chainOnPropsAndInstance(\"onMouseEnter\", this, this.props)}\n                onMouseLeave={chainOnPropsAndInstance(\"onMouseLeave\", this, this.props)}\n                onContextMenu={chainOnPropsAndInstance(\"onContextMenu\", this, this.props)}\n              >\n                {children}\n              </Refable>\n            );\n          }}\n        </Reference>\n        {isClient() &&\n          createPortal(\n            <Popper\n              placement={position as unknown as PopperJS.Placement}\n              modifiers={[\n                {\n                  name: \"offset\",\n                  options: {\n                    offset: [moveBy.secondary, moveBy.main]\n                  }\n                },\n                {\n                  name: \"zIndex\",\n                  enabled: true,\n                  phase: \"write\",\n                  fn({ state }) {\n                    if (zIndex) {\n                      state.styles.popper.zIndex = String(zIndex);\n                    }\n                    return state;\n                  }\n                },\n                {\n                  name: \"rotator\",\n                  enabled: true,\n                  phase: \"write\",\n                  fn({ state }) {\n                    if (!state.styles.arrow) {\n                      return state;\n                    }\n                    // const reg = new RegExp(\n                    //   /translate\\(([0-9].*)px, ([0-9].*)px\\)/\n                    // );\n                    // const transform = state.styles.arrow.transform;\n                    // const res = reg.exec(transform);\n                    // state.styles.popper.transformOrigin = `${100 -\n                    //   res[1]}% ${100 - res[2]}%`;\n                    state.styles.arrow.transform = `${state.styles.arrow.transform} rotate(45deg)`;\n                    return state;\n                  }\n                },\n                createObserveContentResizeModifier(observeContentResize),\n                ...modifiers\n              ]}\n            >\n              {({ placement, style, ref, arrowProps, isReferenceHidden }) => {\n                if (!this.isShown() && placement) {\n                  return null;\n                }\n\n                if (hideWhenReferenceHidden && isReferenceHidden) {\n                  const event = new CustomEvent(\"onReferenceHidden\");\n                  this.hideDialog(event, \"onReferenceHidden\");\n                }\n\n                return (\n                  <DialogContent\n                    data-testid={overrideDataTestId}\n                    isReferenceHidden={hideWhenReferenceHidden && isReferenceHidden}\n                    onMouseEnter={this.onDialogEnter}\n                    onMouseLeave={this.onDialogLeave}\n                    onClickOutside={this.onClickOutside}\n                    onContextMenu={this.onContextMenu}\n                    onEsc={this.onEsc}\n                    animationType={animationTypeCalculated}\n                    position={placement}\n                    wrapperClassName={wrapperClassName}\n                    startingEdge={startingEdge}\n                    isOpen={this.isShown()}\n                    showDelay={showDelay}\n                    styleObject={style}\n                    ref={ref}\n                    onClick={this.onContentClick}\n                    hasTooltip={!!tooltip}\n                    containerSelector={containerSelector}\n                    disableContainerScroll={disableContainerScroll}\n                  >\n                    {contentRendered}\n                    {tooltip && (\n                      <div\n                        style={arrowProps.style}\n                        ref={arrowProps.ref}\n                        className={cx(styles.arrow, tooltipClassName)}\n                        data-placement={placement}\n                      />\n                    )}\n                  </DialogContent>\n                );\n              }}\n            </Popper>,\n            this.getContainer()\n          )}\n      </Manager>\n    );\n  }\n}\n\nfunction chainOnPropsAndInstance(name: string, instance: Dialog, props: DialogProps) {\n  // @ts-ignore\n  return chainFunctions([props[name], instance[name]], true);\n}\n\nDialog.contextType = LayerContext;\n"],"names":["Dialog","_PureComponent","props","_this","_classCallCheck","_callSuper","state","shouldUseDerivedStateFromProps","useDerivedStateFromProps","isOpen","shouldShowOnMount","onMouseEnter","bind","onMouseLeave","onMouseDown","onClick","onFocus","onBlur","isShown","onEsc","onClickOutside","onDialogEnter","onDialogLeave","getContainer","onContentClick","onKeyDown","closeDialogOnEscape","onContextMenu","hideTimeout","showTimeout","_inherits","PureComponent","_createClass","key","value","event","this","hideDialogIfNeeded","DialogTriggerEventEnum","ESCAPE_KEY","handleEvent","TAB_KEY","target","ENTER","_this$props","shouldCallbackOnMount","onDialogDidShow","isClient","document","addEventListener","removeEventListener","containerElement","querySelector","containerSelector","Element","layerRef","context","current","body","eventName","_this2","_this$props2","instantShowAndHide","getDynamicShowDelay","finalShowDelay","showDelay","preventAnimation","dynamicDelayObj","onShowDialog","setState","setTimeout","options","arguments","length","undefined","disable","clearTimeout","showDialog","_this3","_this$props3","hideDelay","onHideDialog","onDialogDidHide","hideDialog","_this$props4","showTriggerIgnoreClass","hideTriggerIgnoreClass","isShowTrigger","isInsideClass","isHideTrigger","showDialogIfNeeded","open","_this$props5","addKeyboardHideShowTriggersByDefault","showTriggersArray","convertToArray","showTrigger","indexOf","_this$props6","hideTriggersArray","hideTrigger","e","button","relatedTarget","preventDefault","showOnDialogEnter","_this4","_this$props7","wrapperClassName","content","startingEdge","children","preventAnimationOnMount","animationType","position","moveBy","modifiers","tooltip","tooltipClassName","referenceWrapperClassName","zIndex","hideWhenReferenceHidden","disableContainerScroll","observeContentResize","overrideDataTestId","getTestId","ComponentDefaultTestId","DIALOG","id","animationTypeCalculated","contentRendered","isFunction","React","Manager","createElement","Reference","_ref","ref","Refable","className","cx","chainOnPropsAndInstance","createPortal","Popper","placement","name","offset","secondary","main","enabled","phase","fn","_ref2","styles","popper","String","_ref3","arrow","transform","concat","createObserveContentResizeModifier","_toConsumableArray","_ref4","style","arrowProps","isReferenceHidden","CustomEvent","DialogContent","styleObject","hasTooltip","nextProps","instance","chainFunctions","hideShowTriggers","positions","DialogPositionEnum","animationTypes","AnimationTypeEnum","defaultProps","MOUSE_ENTER","MOUSE_LEAVE","EXPAND","NOOP","contextType","LayerContext"],"mappings":"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"}