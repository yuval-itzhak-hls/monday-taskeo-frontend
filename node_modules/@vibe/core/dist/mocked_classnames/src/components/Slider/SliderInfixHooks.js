import{typeof as e}from"../../../_virtual/_rollupPluginBabelHelpers.js";import{__rest as t}from"../../../_virtual/_tslib.js";import i from"react";import n from"../Icon/Icon.js";import{useSliderInfix as r,useSliderSelection as o}from"./SliderContext.js";import c from"./SelectionIndicator.js";var l={clickable:!1,iconSize:18,ignoreFocusStyle:!0};function a(a){var s="postfix"===a,m=r(),f=m.prefix,p=m.postfix,u=m.indicateSelection,d=m.selectionIndicatorWidth,g=o(),j=g.value,v=g.valueText,x=s?p:f;if(u&&(s||g.ranged))return[!0,[],i.createElement(c,{key:a,kind:a}),{width:d}];if("object"===e(x)&&x.icon){var b=x.icon,y=t(x,["icon"]),S=Object.assign(Object.assign({},l),y);return[!0,[],i.createElement(n,Object.assign({key:"infix-icon",icon:b},S)),{}]}return"function"==typeof x?[!0,[],x(j,v),{}]:"string"==typeof x?[!0,["txt"],i.createElement(i.Fragment,null,x),{}]:void 0===x?[!1,[],null,{}]:[!0,[],i.createElement(i.Fragment,null,x),{}]}export{a as useSliderInfixComponent};
//# sourceMappingURL=SliderInfixHooks.js.map
