{"version":3,"file":"TableHeaderCell.js","sources":["../../../../../src/components/Table/TableHeaderCell/TableHeaderCell.tsx"],"sourcesContent":["import React, { forwardRef, useState } from \"react\";\nimport cx from \"classnames\";\nimport { SubIcon, VibeComponent, VibeComponentProps } from \"../../../types\";\nimport styles from \"./TableHeaderCell.module.scss\";\nimport Icon from \"../../Icon/Icon\";\nimport IconButton from \"../../IconButton/IconButton\";\nimport { Info } from \"@vibe/icons\";\nimport Text from \"../../Text/Text\";\nimport Flex from \"../../Flex/Flex\";\nimport { getAriaSort, getNextSortState, getSortIcon } from \"../Table/tableHelpers\";\nimport Tooltip from \"../../Tooltip/Tooltip\";\nimport { getTestId } from \"../../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../../tests/constants\";\nimport { getStyle } from \"../../../helpers/typesciptCssModulesHelper\";\n\nexport interface TableHeaderCellProps extends VibeComponentProps {\n  title: string | React.ReactNode;\n  icon?: SubIcon;\n  infoContent?: string;\n  sortState?: \"asc\" | \"desc\" | \"none\";\n  onSortClicked?: (direction: \"asc\" | \"desc\" | \"none\") => void;\n  sortButtonAriaLabel?: string;\n  sticky?: boolean;\n}\n\nconst TableHeaderCell: VibeComponent<TableHeaderCellProps, HTMLDivElement> = forwardRef(\n  (\n    {\n      id,\n      className,\n      \"data-testid\": dataTestId,\n      title,\n      onSortClicked,\n      infoContent,\n      icon,\n      sortState = \"none\",\n      sortButtonAriaLabel = \"Sort\",\n      sticky\n    }: TableHeaderCellProps,\n    ref\n  ) => {\n    const [isHovered, setIsHovered] = useState<boolean>(false);\n    const ariaSort = getAriaSort(sortState);\n    const isSortActive = onSortClicked && ariaSort !== \"none\";\n    const shouldShowSortIcon = ariaSort !== \"none\" || isHovered;\n\n    return (\n      <div\n        ref={ref}\n        id={id}\n        className={cx(\n          styles.tableHeaderCell,\n          { [styles.sortActive]: isSortActive, [styles.sticky]: sticky },\n          className\n        )}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.TABLE_HEADER_CELL, id)}\n        role=\"columnheader\"\n        onMouseOver={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n        onFocus={() => setIsHovered(true)}\n        onBlur={() => setIsHovered(false)}\n        aria-sort={onSortClicked ? ariaSort : undefined}\n        tabIndex={onSortClicked ? 0 : undefined}\n      >\n        <Flex direction=\"row\" align=\"center\" className={styles.tableHeaderCellContent} gap=\"xs\">\n          {icon && <Icon icon={icon} className={styles.icon} />}\n          {typeof title === \"string\" ? (\n            <Text type=\"text2\" weight=\"medium\" color=\"secondary\">\n              {title}\n            </Text>\n          ) : (\n            title\n          )}\n          {infoContent && (\n            <Tooltip content={infoContent} referenceWrapperClassName={styles.infoTooltip}>\n              <Icon icon={Info} iconLabel={infoContent} />\n            </Tooltip>\n          )}\n        </Flex>\n        {onSortClicked && (\n          <Flex direction=\"row\" align=\"center\" className={styles.tableHeaderCellSort}>\n            <IconButton\n              icon={getSortIcon(sortState)}\n              kind=\"tertiary\"\n              size=\"xs\"\n              ariaLabel={sortButtonAriaLabel}\n              aria-hidden={!shouldShowSortIcon}\n              className={cx(styles.sort, getStyle(styles, sortState), {\n                [styles.show]: shouldShowSortIcon\n              })}\n              onClick={() => onSortClicked(getNextSortState(sortState))}\n            />\n          </Flex>\n        )}\n      </div>\n    );\n  }\n);\n\nexport default TableHeaderCell;\n"],"names":["TableHeaderCell","forwardRef","_ref","ref","id","className","dataTestId","title","onSortClicked","infoContent","icon","_ref$sortState","sortState","_ref$sortButtonAriaLa","sortButtonAriaLabel","sticky","_useState","useState","_useState2","_slicedToArray","isHovered","setIsHovered","ariaSort","getAriaSort","shouldShowSortIcon","React","createElement","cx","styles","tableHeaderCell","_defineProperty","sortActive","getTestId","ComponentDefaultTestId","TABLE_HEADER_CELL","role","onMouseOver","onMouseLeave","onFocus","onBlur","undefined","tabIndex","Flex","direction","align","tableHeaderCellContent","gap","Icon","Text","type","weight","color","Tooltip","content","referenceWrapperClassName","infoTooltip","Info","iconLabel","tableHeaderCellSort","IconButton","getSortIcon","kind","size","ariaLabel","sort","getStyle","show","onClick","getNextSortState"],"mappings":"svBAyBMA,IAAAA,EAAuEC,GAC3E,SAAAC,EAaEC,GACE,IAZAC,EAAEF,EAAFE,GACAC,EAASH,EAATG,UACeC,EAAUJ,EAAzB,eACAK,EAAKL,EAALK,MACAC,EAAaN,EAAbM,cACAC,EAAWP,EAAXO,YACAC,EAAIR,EAAJQ,KAAIC,EAAAT,EACJU,UAAAA,OAAY,IAAHD,EAAG,OAAMA,EAAAE,EAAAX,EAClBY,oBAAAA,OAAsB,IAAHD,EAAG,OAAMA,EAC5BE,EAAMb,EAANa,OAIFC,EAAkCC,GAAkB,GAAMC,EAAAC,EAAAH,EAAA,GAAnDI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GACxBI,EAAWC,EAAYX,GAEvBY,EAAkC,SAAbF,GAAuBF,EAElD,OACEK,EACEC,cAAA,MAAA,CAAAvB,IAAKA,EACLC,GAAIA,EACJC,UAAWsB,EACTC,EAAOC,gBAAeC,EAAAA,EACnBF,CAAAA,EAAAA,EAAOG,WATKvB,GAA8B,SAAbc,GASMM,EAAOb,OAASA,GACtDV,GAEW,cAAAC,GAAc0B,EAAUC,EAAuBC,kBAAmB9B,GAC/E+B,KAAK,eACLC,YAAa,WAAA,OAAMf,GAAa,EAAK,EACrCgB,aAAc,WAAA,OAAMhB,GAAa,EAAM,EACvCiB,QAAS,WAAA,OAAMjB,GAAa,EAAK,EACjCkB,OAAQ,WAAA,OAAMlB,GAAa,EAAM,EACtB,YAAAb,EAAgBc,OAAWkB,EACtCC,SAAUjC,EAAgB,OAAIgC,GAE9Bf,EAAAC,cAACgB,EAAK,CAAAC,UAAU,MAAMC,MAAM,SAASvC,UAAWuB,EAAOiB,uBAAwBC,IAAI,MAChFpC,GAAQe,EAAAC,cAACqB,EAAI,CAACrC,KAAMA,EAAML,UAAWuB,EAAOlB,OAC3B,iBAAVH,EACNkB,EAAAC,cAACsB,EAAI,CAACC,KAAK,QAAQC,OAAO,SAASC,MAAM,aACtC5C,GAGHA,EAEDE,GACCgB,EAACC,cAAA0B,EAAQ,CAAAC,QAAS5C,EAAa6C,0BAA2B1B,EAAO2B,aAC/D9B,EAAAC,cAACqB,EAAI,CAACrC,KAAM8C,EAAMC,UAAWhD,MAIlCD,GACCiB,EAAAC,cAACgB,EAAI,CAACC,UAAU,MAAMC,MAAM,SAASvC,UAAWuB,EAAO8B,qBACrDjC,EAAAC,cAACiC,EACC,CAAAjD,KAAMkD,EAAYhD,GAClBiD,KAAK,WACLC,KAAK,KACLC,UAAWjD,EAAmB,eAChBU,EACdnB,UAAWsB,EAAGC,EAAOoC,KAAMC,EAASrC,EAAQhB,GAAUkB,EACnDF,CAAAA,EAAAA,EAAOsC,KAAO1C,IAEjB2C,QAAS,WAAA,OAAM3D,EAAc4D,EAAiBxD,GAAW,KAMrE"}