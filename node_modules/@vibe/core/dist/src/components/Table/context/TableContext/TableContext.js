import r,{useContext as e,createContext as t,useRef as n,useCallback as o,useMemo as l}from"react";var u=t(void 0),c=function(e){var t=e.value,c=e.children,i=t.setIsScrolled,a=n(null),f=n(null),d=n(0),s=o((function(r,e){if(r!==d.current){"body"===e&&a.current&&(a.current.scrollLeft=r),"head"===e&&f.current&&(f.current.scrollLeft=r);var t=r>0;i((function(r){return r!==t?t:r})),d.current=r}}),[i]),v=o((function(r){s(r.target.scrollLeft,"head")}),[s]),b=o((function(r){s(r.target.scrollLeft,"body")}),[s]),h=l((function(){return Object.assign(Object.assign({},t),{headRef:a,onHeadScroll:v,virtualizedListRef:f,onVirtualizedListScroll:b})}),[t,v,b]);return r.createElement(u.Provider,{value:h},c)},i=function(){var r=e(u);if(void 0===r)throw Error("useTable must be used within a TableProvider");return r};export{c as TableProvider,i as useTable};
//# sourceMappingURL=TableContext.js.map
