{"version":3,"file":"ListItem.js","sources":["../../../../src/components/ListItem/ListItem.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport React, { AriaAttributes, forwardRef, useCallback, useContext, useEffect, useRef } from \"react\";\nimport { camelCase } from \"lodash-es\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport Text from \"../Text/Text\";\nimport { SIZES, SELECTION_KEYS } from \"../../constants\";\nimport { NOOP } from \"../../utils/function-utils\";\nimport { withStaticProps, VibeComponentProps, VibeComponent, ElementContent } from \"../../types\";\nimport { useKeyEvent } from \"../../hooks\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport { ListContext } from \"../List/utils/ListContext\";\nimport { ListItemComponentType as ListItemComponentTypeEnum } from \"./ListItemConstants\";\nimport { ListItemElement, ListItemSize } from \"./ListItem.types\";\nimport styles from \"./ListItem.module.scss\";\n\nexport interface ListItemProps extends VibeComponentProps {\n  /**\n   * the ListItem element [li, div, a]\n   */\n  component?: ListItemElement;\n  /**\n   * The textual content of the list item\n   */\n  children?: ElementContent;\n  /**\n   * A class name to be passed to the list item wrapper\n   */\n  className?: string;\n  /**\n   * An id to be passed to the list item wrapper\n   */\n  id?: string;\n  /**\n   * A callback function which is being called when the item is being clicked\n   * It will be called with the following params\n   * event (DomEvent)\n   * id (the id which is being passed)\n   * onClick(event, id)\n   */\n  onClick?: (event: React.MouseEvent | React.KeyboardEvent, id: string) => void;\n  /**\n   * A callback function which is being called when the item is being hovered\n   * It will be called with the following params\n   * event (DomEvent)\n   * id (the id which is being passed)\n   * onHover(event, id)\n   */\n  onHover?: (event: React.MouseEvent | React.FocusEvent, id: string) => void;\n  /**\n   * disabled state - callback will not be called and navigation will be skipped\n   */\n  disabled?: boolean;\n  /**\n   * Selected indication\n   */\n  selected?: boolean;\n  /**\n   * The size of the list item\n   */\n  size?: ListItemSize;\n  /**\n   Tabindex is used for keyboard navigation - if you want to skip \"Tab navigation\" please pass -1.\n   */\n  tabIndex?: number;\n  \"aria-current\"?: AriaAttributes[\"aria-current\"];\n}\n\nconst ListItem: VibeComponent<ListItemProps> & { sizes?: typeof SIZES; components?: typeof ListItemComponentTypeEnum } =\n  forwardRef(\n    (\n      {\n        className,\n        id,\n        component = \"div\",\n        onClick = NOOP,\n        onHover = NOOP,\n        selected,\n        disabled = false,\n        size = SIZES.SMALL,\n        tabIndex = 0,\n        children,\n        \"aria-current\": ariaCurrent,\n        \"data-testid\": dataTestId\n      }: ListItemProps,\n      ref\n    ) => {\n      const { updateFocusedItem } = useContext(ListContext);\n      const componentRef = useRef(null);\n      const mergedRef = useMergeRef(ref, componentRef);\n\n      useEffect(() => {\n        if (selected) {\n          updateFocusedItem?.(id);\n        }\n      }, [selected, id, updateFocusedItem]);\n\n      const componentOnClick = useCallback(\n        (event: React.MouseEvent | React.KeyboardEvent) => {\n          if (disabled) return;\n          onClick(event, id);\n        },\n        [disabled, onClick, id]\n      );\n\n      useKeyEvent({\n        keys: SELECTION_KEYS,\n        ref: componentRef,\n        callback: componentOnClick\n      });\n\n      const componentOnHover = useCallback(\n        (event: React.MouseEvent | React.FocusEvent) => {\n          if (disabled) return;\n          onHover(event, id);\n        },\n        [disabled, onHover, id]\n      );\n\n      return (\n        <Text\n          element={component}\n          data-testid={dataTestId || id}\n          ref={mergedRef}\n          className={cx(styles.listItem, className, getStyle(styles, camelCase(size)), {\n            [styles.selected]: selected && !disabled,\n            [styles.disabled]: disabled\n          })}\n          id={id}\n          type=\"text2\"\n          aria-disabled={disabled}\n          aria-selected={selected}\n          onClick={componentOnClick}\n          onMouseEnter={componentOnHover}\n          onFocus={componentOnHover}\n          role=\"option\"\n          tabIndex={tabIndex}\n          aria-current={ariaCurrent}\n        >\n          {children}\n        </Text>\n      );\n    }\n  );\n\nObject.assign(ListItem, {\n  // Used by VirtualizedListItems\n  displayName: \"ListItem\"\n});\n\nexport default withStaticProps(ListItem, {\n  sizes: SIZES,\n  components: ListItemComponentTypeEnum\n});\n"],"names":["ListItem","forwardRef","_ref","ref","className","id","_ref$component","component","_ref$onClick","onClick","NOOP","_ref$onHover","onHover","selected","_ref$disabled","disabled","_ref$size","size","SIZES","SMALL","_ref$tabIndex","tabIndex","children","ariaCurrent","dataTestId","updateFocusedItem","useContext","ListContext","componentRef","useRef","mergedRef","useMergeRef","useEffect","componentOnClick","useCallback","event","useKeyEvent","keys","SELECTION_KEYS","callback","componentOnHover","React","createElement","Text","element","cx","styles","listItem","getStyle","camelCase","_defineProperty","type","onMouseEnter","onFocus","role","Object","assign","displayName","withStaticProps","sizes","components","ListItemComponentTypeEnum"],"mappings":"ynCAmEA,IAAMA,EACJC,GACE,SAAAC,EAeEC,GACE,IAdAC,EAASF,EAATE,UACAC,EAAEH,EAAFG,GAAEC,EAAAJ,EACFK,UAAAA,OAAY,IAAHD,EAAG,MAAKA,EAAAE,EAAAN,EACjBO,QAAAA,OAAUC,IAAHF,EAAGE,EAAIF,EAAAG,EAAAT,EACdU,QAAAA,OAAUF,IAAHC,EAAGD,EAAIC,EACdE,EAAQX,EAARW,SAAQC,EAAAZ,EACRa,SAAAA,OAAW,IAAHD,GAAQA,EAAAE,EAAAd,EAChBe,KAAAA,OAAI,IAAAD,EAAGE,EAAMC,MAAKH,EAAAI,EAAAlB,EAClBmB,SAAAA,OAAW,IAAHD,EAAG,EAACA,EACZE,EAAQpB,EAARoB,SACgBC,EAAWrB,EAA3B,gBACesB,EAAUtB,EAAzB,eAIMuB,EAAsBC,EAAWC,GAAjCF,kBACFG,EAAeC,EAAO,MACtBC,EAAYC,EAAY5B,EAAKyB,GAEnCI,GAAU,WACJnB,IACFY,SAAAA,EAAoBpB,GAEvB,GAAE,CAACQ,EAAUR,EAAIoB,IAElB,IAAMQ,EAAmBC,GACvB,SAACC,GACKpB,GACJN,EAAQ0B,EAAO9B,EAChB,GACD,CAACU,EAAUN,EAASJ,IAGtB+B,EAAY,CACVC,KAAMC,EACNnC,IAAKyB,EACLW,SAAUN,IAGZ,IAAMO,EAAmBN,GACvB,SAACC,GACKpB,GACJH,EAAQuB,EAAO9B,EAChB,GACD,CAACU,EAAUH,EAASP,IAGtB,OACEoC,EAAAC,cAACC,EAAI,CACHC,QAASrC,EACI,cAAAiB,GAAcnB,EAC3BF,IAAK2B,EACL1B,UAAWyC,EAAGC,EAAOC,SAAU3C,EAAW4C,EAASF,EAAQG,EAAUhC,IAAMiC,EAAAA,EACxEJ,CAAAA,EAAAA,EAAOjC,SAAWA,IAAaE,GAC/B+B,EAAO/B,SAAWA,IAErBV,GAAIA,EACJ8C,KAAK,QACU,gBAAApC,kBACAF,EACfJ,QAASwB,EACTmB,aAAcZ,EACda,QAASb,EACTc,KAAK,SACLjC,SAAUA,EACI,eAAAE,GAEbD,EAGP,IAGJiC,OAAOC,OAAOxD,EAAU,CAEtByD,YAAa,aAGf,IAAeC,EAAAA,EAAgB1D,EAAU,CACvC2D,MAAOzC,EACP0C,WAAYC"}