import t from"classnames";import{camelCase as s}from"lodash-es";import e,{forwardRef as a,useRef as r,useMemo as i}from"react";import o from"../../../hooks/useMergeRef.js";import{TabPanelsAnimationDirection as n}from"./TabPanelsConstants.js";import{getTestId as m,ComponentDefaultTestId as l}from"../../../tests/testIds.js";import{getStyle as c}from"../../../helpers/typesciptCssModulesHelper.js";import{withStaticProps as p}from"../../../types/withStaticProps.js";import"../../../utils/colors-vars-map.js";import d from"./TabPanels.module.scss.js";var f=a((function(a,n){var p=a.className,f=a.id,u=a.activeTabId,v=void 0===u?0:u,j=a.animationDirection,b=void 0===j?"rtl":j,P=a.children,h=a["data-testid"],N=r(null),T=o(n,N),g=i((function(){return e.Children.map(P,(function(a,r){var i=v===r;if(!i)return null;var o=i?"active":"non-active",n=i?"animation-direction-".concat(b):"";return e.cloneElement(a,Object.assign(Object.assign({index:r},a.props),{className:t(d.tabPanel,[c(d,o)],[c(d,s(n))],a.props.className)}))})).filter(Boolean)}),[P,v,b]);return e.createElement("div",{ref:T,className:t(d.tabPanelsWrapper,p),id:f,"data-testid":h||m(l.TAB_PANELS,f)},g)}));Object.assign(f,{isTabPanels:!0});var u=p(f,{animationDirections:n});export{u as default};
//# sourceMappingURL=TabPanels.js.map
