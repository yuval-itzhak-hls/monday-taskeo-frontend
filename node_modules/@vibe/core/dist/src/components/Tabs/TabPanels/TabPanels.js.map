{"version":3,"file":"TabPanels.js","sources":["../../../../../src/components/Tabs/TabPanels/TabPanels.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport { camelCase } from \"lodash-es\";\nimport React, { FC, forwardRef, ReactElement, useMemo, useRef } from \"react\";\nimport useMergeRef from \"../../../hooks/useMergeRef\";\nimport VibeComponentProps from \"../../../types/VibeComponentProps\";\nimport { TabPanelsAnimationDirection as TabPanelsAnimationDirectionEnum } from \"./TabPanelsConstants\";\nimport { TabPanelsAnimationDirection } from \"./TabPanels.types\";\nimport { TabPanelProps } from \"../TabPanel/TabPanel\";\nimport { ComponentDefaultTestId, getTestId } from \"../../../tests/test-ids-utils\";\nimport { getStyle } from \"../../../helpers/typesciptCssModulesHelper\";\nimport { withStaticProps } from \"../../../types\";\nimport styles from \"./TabPanels.module.scss\";\n\nexport interface TabPanelsProps extends VibeComponentProps {\n  activeTabId?: number;\n  animationDirection?: TabPanelsAnimationDirection;\n  children?: ReactElement<TabPanelProps> | ReactElement<TabPanelProps>[];\n}\n\nconst TabPanels: FC<TabPanelsProps> & {\n  animationDirections?: typeof TabPanelsAnimationDirectionEnum;\n} = forwardRef(\n  (\n    { className, id, activeTabId = 0, animationDirection = \"rtl\", children, \"data-testid\": dataTestId }: TabPanelsProps,\n    ref\n  ) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n    const renderedTabs = useMemo(() => {\n      return React.Children.map(children, (child, index) => {\n        const isActiveTab = activeTabId === index;\n        if (!isActiveTab) return null;\n        const activeClass = isActiveTab ? \"active\" : \"non-active\";\n        const animationClass = isActiveTab ? `animation-direction-${animationDirection}` : \"\";\n        return React.cloneElement(child, {\n          index,\n          ...child.props,\n          className: cx(\n            styles.tabPanel,\n            [getStyle(styles, activeClass)],\n            [getStyle(styles, camelCase(animationClass))],\n            child.props.className\n          )\n        });\n      }).filter(Boolean);\n    }, [children, activeTabId, animationDirection]);\n\n    return (\n      <div\n        ref={mergedRef}\n        className={cx(styles.tabPanelsWrapper, className)}\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.TAB_PANELS, id)}\n      >\n        {renderedTabs}\n      </div>\n    );\n  }\n);\n\nObject.assign(TabPanels, {\n  isTabPanels: true\n});\n\nexport default withStaticProps(TabPanels, {\n  animationDirections: TabPanelsAnimationDirectionEnum\n});\n"],"names":["TabPanels","forwardRef","_ref","ref","className","id","_ref$activeTabId","activeTabId","_ref$animationDirecti","animationDirection","children","dataTestId","componentRef","useRef","mergedRef","useMergeRef","renderedTabs","useMemo","React","Children","map","child","index","isActiveTab","activeClass","animationClass","concat","cloneElement","Object","assign","props","cx","styles","tabPanel","getStyle","camelCase","filter","Boolean","createElement","tabPanelsWrapper","getTestId","ComponentDefaultTestId","TAB_PANELS","isTabPanels","withStaticProps","animationDirections","TabPanelsAnimationDirectionEnum"],"mappings":"qiBAmBA,IAAMA,EAEFC,GACF,SAAAC,EAEEC,GACE,IAFAC,EAASF,EAATE,UAAWC,EAAEH,EAAFG,GAAEC,EAAAJ,EAAEK,YAAAA,OAAc,IAAHD,EAAG,EAACA,EAAAE,EAAAN,EAAEO,mBAAAA,OAAqB,IAAHD,EAAG,MAAKA,EAAEE,EAAQR,EAARQ,SAAyBC,EAAUT,EAAzB,eAGlEU,EAAeC,EAAO,MACtBC,EAAYC,EAAYZ,EAAKS,GAC7BI,EAAeC,GAAQ,WAC3B,OAAOC,EAAMC,SAASC,IAAIV,GAAU,SAACW,EAAOC,GAC1C,IAAMC,EAAchB,IAAgBe,EACpC,IAAKC,EAAa,OAAO,KACzB,IAAMC,EAAcD,EAAc,SAAW,aACvCE,EAAiBF,EAAW,uBAAAG,OAA0BjB,GAAuB,GACnF,OAAOS,EAAMS,aAAaN,EACxBO,OAAAC,OAAAD,OAAAC,OAAA,CAAAP,MAAAA,GACGD,EAAMS,QACT1B,UAAW2B,EACTC,EAAOC,SACP,CAACC,EAASF,EAAQR,IAClB,CAACU,EAASF,EAAQG,EAAUV,KAC5BJ,EAAMS,MAAM1B,aAGlB,IAAGgC,OAAOC,QACX,GAAE,CAAC3B,EAAUH,EAAaE,IAE3B,OACES,EAAAoB,cAAA,MAAA,CACEnC,IAAKW,EACLV,UAAW2B,EAAGC,EAAOO,iBAAkBnC,GACvCC,GAAIA,EACS,cAAAM,GAAc6B,EAAUC,EAAuBC,WAAYrC,IAEvEW,EAGP,IAGFY,OAAOC,OAAO7B,EAAW,CACvB2C,aAAa,IAGf,IAAeC,EAAAA,EAAgB5C,EAAW,CACxC6C,oBAAqBC"}