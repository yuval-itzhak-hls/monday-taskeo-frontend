{"version":3,"file":"Text.js","sources":["../../../../src/components/Text/Text.tsx"],"sourcesContent":["import React, { forwardRef, ReactNode } from \"react\";\nimport cx from \"classnames\";\nimport { camelCase } from \"lodash-es\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport VibeComponent from \"../../types/VibeComponent\";\nimport { TextType as TextTypeEnum, TextWeight as TextWeightEnum } from \"./TextConstants\";\nimport Typography, { TypographyProps } from \"../Typography/Typography\";\nimport {\n  TypographyAlign as TypographyAlignEnum,\n  TypographyColor as TypographyColorEnum\n} from \"../Typography/TypographyConstants\";\nimport { TextType, TextWeight } from \"./Text.types\";\nimport { withStaticProps } from \"../../types\";\nimport styles from \"./Text.module.scss\";\n\nexport interface TextProps extends TypographyProps {\n  type?: TextType;\n  weight?: TextWeight;\n  children: ReactNode;\n}\n\nconst Text: VibeComponent<TextProps, HTMLElement> & {\n  types?: typeof TextTypeEnum;\n  weights?: typeof TextWeightEnum;\n  colors?: typeof TypographyColorEnum;\n  align?: typeof TypographyAlignEnum;\n} = forwardRef(\n  (\n    {\n      className,\n      type = \"text2\",\n      weight = \"normal\",\n      ellipsis,\n      element = \"div\",\n      children,\n      ...typographyProps\n    }: TextProps,\n    ref\n  ) => {\n    const overrideEllipsis = ellipsis ?? element !== \"p\";\n    return (\n      <Typography\n        ref={ref}\n        className={cx(styles.text, getStyle(styles, camelCase(type + \"-\" + weight)), className)}\n        ellipsis={overrideEllipsis}\n        element={element}\n        {...typographyProps}\n      >\n        {children}\n      </Typography>\n    );\n  }\n);\n\nexport default withStaticProps(Text, {\n  types: TextTypeEnum,\n  weights: TextWeightEnum,\n  colors: TypographyColorEnum,\n  align: TypographyAlignEnum\n});\n"],"names":["withStaticProps","forwardRef","_a","ref","className","_a$type","type","_a$weight","weight","ellipsis","_a$element","element","children","typographyProps","__rest","overrideEllipsis","React","Typography","Object","assign","cx","styles","text","getStyle","camelCase","types","TextTypeEnum","weights","TextWeightEnum","colors","TypographyColorEnum","align","TypographyAlignEnum"],"mappings":"mjBAqBA,IAiCeA,EAAAA,EA5BXC,GACF,SACEC,EASAC,OAREC,IAAAA,UAASC,IACTC,KAAAA,OAAO,IAAHD,EAAG,QAAOA,EAAAE,IACdC,OAAAA,OAAS,IAAHD,EAAG,SAAQA,EACjBE,IAAAA,SAAQC,IACRC,QAAAA,OAAU,IAAHD,EAAG,MAAKA,EACfE,IAAAA,SACGC,EAPLC,EAAAZ,EAAA,CAAA,YAAA,OAAA,SAAA,WAAA,UAAA,aAWMa,EAAmBN,QAAAA,EAAwB,MAAZE,EACrC,OACEK,gBAACC,EAAUC,OAAAC,OAAA,CACThB,IAAKA,EACLC,UAAWgB,EAAGC,EAAOC,KAAMC,EAASF,EAAQG,EAAUlB,EAAO,IAAME,IAAUJ,GAC7EK,SAAUM,EACVJ,QAASA,GACLE,GAEHD,EAGP,IAGmC,CACnCa,MAAOC,EACPC,QAASC,EACTC,OAAQC,EACRC,MAAOC"}