import React, { ReactElement } from "react";
import { AlertBannerBackgroundColor as AlertBannerBackgroundColorEnum } from "./AlertBannerConstants";
import { AlertBannerBackgroundColor } from "./AlertBanner.types";
import VibeComponentProps from "../../types/VibeComponentProps";
import { AlertBannerLinkProps } from "./AlertBannerLink/AlertBannerLink";
import { AlertBannerButtonProps } from "./AlertBannerButton/AlertBannerButton";
import { AlertBannerTextProps } from "./AlertBannerText/AlertBannerText";
import { VibeComponent } from "../../types";
type ChildrenType = ReactElement<AlertBannerButtonProps | AlertBannerLinkProps | AlertBannerTextProps>;
export interface AlertBannerProps extends VibeComponentProps {
    /**
     * Set external styling to the progress bar.
     */
    className?: string;
    backgroundColor?: AlertBannerBackgroundColor;
    isCloseHidden?: boolean;
    /** ARIA description for the progress bar */
    ariaLabel?: string;
    closeButtonAriaLabel?: string;
    onClose?: (event: React.MouseEvent<HTMLButtonElement>) => void;
    children?: ChildrenType | ChildrenType[];
}
declare const _default: ((VibeComponent<AlertBannerProps & React.RefAttributes<HTMLElement>, HTMLElement> & Partial<{
    backgroundColors: typeof AlertBannerBackgroundColorEnum;
}>) | (React.FC<AlertBannerProps & React.RefAttributes<HTMLElement>> & Partial<{
    backgroundColors: typeof AlertBannerBackgroundColorEnum;
}>)) & {
    backgroundColors: typeof AlertBannerBackgroundColorEnum;
};
export default _default;
