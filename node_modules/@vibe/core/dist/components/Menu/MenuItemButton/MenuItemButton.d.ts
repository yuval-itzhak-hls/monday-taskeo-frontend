import React from "react";
import { ButtonType } from "../../Button/Button.types";
import { SubIcon, VibeComponentProps, ElementContent } from "../../../types";
import { TooltipPositions } from "../../Tooltip/Tooltip.types";
import { TooltipPositions as TooltipPositionsEnum } from "../../Tooltip/TooltipConstants";
export interface MenuItemButtonProps extends VibeComponentProps {
    kind?: ButtonType;
    leftIcon?: SubIcon;
    rightIcon?: SubIcon;
    index?: number;
    activeItemIndex?: number;
    disabled?: boolean;
    disableReason?: string;
    onClick?: (event: React.MouseEvent | React.KeyboardEvent) => void;
    tooltipPosition?: TooltipPositions;
    tooltipShowDelay?: number;
    resetOpenSubMenuIndex?: () => void;
    setSubMenuIsOpenByIndex?: (index: number, isOpen: boolean) => void;
    setActiveItemIndex?: (index: number) => void;
    menuRef?: React.RefObject<HTMLElement>;
    closeMenu?: () => void;
    useDocumentEventListeners?: boolean;
    children?: ElementContent | ElementContent[];
}
declare const _default: ((import("../../../types/VibeComponent").default<MenuItemButtonProps, unknown> & Partial<{
    kinds: typeof import("../../Button/ButtonConstants").ButtonType;
    tooltipPositions: typeof TooltipPositionsEnum;
}>) | (React.FC<MenuItemButtonProps> & Partial<{
    kinds: typeof import("../../Button/ButtonConstants").ButtonType;
    tooltipPositions: typeof TooltipPositionsEnum;
}>)) & {
    kinds: typeof import("../../Button/ButtonConstants").ButtonType;
    tooltipPositions: typeof TooltipPositionsEnum;
};
export default _default;
