const BASE_URL = '/api';
const BASE_APPS_URL = '/api/apps';
const BASE_VERSIONS_URL = '/api/app-versions';
const BASE_APP_VERSIONS_URL = '/api/app-versions';
const BASE_MONDAY_CODE_URL = '/api/code';
export const appVersionIdBaseUrl = (appVersionId) => {
    return `${BASE_MONDAY_CODE_URL}/${appVersionId}`;
};
export const getAppVersionDeploymentStatusUrl = (appVersionId) => {
    return `${appVersionIdBaseUrl(appVersionId)}/deployments`;
};
export const getAppFeaturesUrl = (appVersionId, types) => {
    const url = `${BASE_APP_VERSIONS_URL}/${appVersionId}/app-features`;
    const appFeatureTypes = types?.map((type, index) => `type[${index}]=${type}`).join('&');
    return appFeatureTypes ? `${url}?${appFeatureTypes}` : url;
};
export const getCreateAppFeatureUrl = (appId, appVersionId) => {
    return `${BASE_APPS_URL}/${appId}/app-versions/${appVersionId}/app-features`;
};
export const getCreateAppFeatureReleaseUrl = (appId, appVersionId, appFeatureId) => {
    return `${BASE_APPS_URL}/${appId}/versions/${appVersionId}/app-features/${appFeatureId}/releases`;
};
export const getDeploymentSignedUrl = (appVersionId) => {
    return `${appVersionIdBaseUrl(appVersionId)}/deployments/signed-url`;
};
export const getDeploymentClientUpload = (appVersionId) => {
    return `${appVersionIdBaseUrl(appVersionId)}/deployments`;
};
export const getStorageItemsSearchUrl = (appId, clientAccountId, term) => {
    return `/api/storage/app/${appId}/account/${clientAccountId}/records?term=${encodeURI(term)}`;
};
export const getStorageItemsExportUrl = (appId, clientAccountId) => {
    return `/api/storage/app/${appId}/account/${clientAccountId}/records/export`;
};
export const getLogsStreamForAppVersionIdUrl = (appVersionId, logsType, logsFilterCriteria, region) => {
    const logsFilterCriteriaParams = logsFilterCriteria
        ? `&fromDate=${logsFilterCriteria.fromDate.getTime()}&toDate=${logsFilterCriteria.toDate.getTime()}&text=${encodeURIComponent(logsFilterCriteria.text || '')}`
        : '';
    return `${appVersionIdBaseUrl(appVersionId)}/logs?type=${logsType}${logsFilterCriteriaParams}${region ? `&region=${region}` : ''}`;
};
export const listAppsUrl = () => {
    return BASE_APPS_URL;
};
export const createAppUrl = () => {
    return BASE_APPS_URL;
};
export const listAppVersionsByAppIdUrl = (appId) => {
    return `${BASE_APPS_URL}/${appId}/versions`;
};
export const getAppVersionsByAppIdUrl = (appVersionId) => {
    return `${BASE_VERSIONS_URL}/${appVersionId}`;
};
export const appEnvironmentUrl = (appId, key) => {
    return `${BASE_MONDAY_CODE_URL}/${appId}/env/${key}`;
};
export const appEnvironmentKeysUrl = (appId) => {
    return `${BASE_MONDAY_CODE_URL}/${appId}/env-keys`;
};
export const appSecretUrl = (appId, key) => {
    return `${BASE_MONDAY_CODE_URL}/${appId}/secrets/${key}`;
};
export const appSecretKeysUrl = (appId) => {
    return `${BASE_MONDAY_CODE_URL}/${appId}/secret-keys`;
};
export const appReleasesUrl = (appVersionId) => {
    return `/apps_ms/app-versions/${appVersionId}/releases`;
};
export const generateTunnelingTokenUrl = () => {
    return `${BASE_MONDAY_CODE_URL}/tunnel-token`;
};
export const getTunnelingDomainUrl = () => {
    return `${BASE_MONDAY_CODE_URL}/tunnel-domain`;
};
export const removeAppStorageDataForAccountUrl = (appId, targetAccountId) => {
    return `${BASE_APPS_URL}/${appId}/accounts/${targetAccountId}`;
};
export const promoteAppUrl = (appId) => {
    return `${BASE_APPS_URL}/${appId}/promote`;
};
export const pullPromoteStatusUrl = (path) => {
    return `${BASE_URL}/${path}`;
};
export const appSchedulerUrl = (appId) => {
    return `${BASE_MONDAY_CODE_URL}/${appId}/scheduler`;
};
export const appStorageConnectionStringUrl = (appId) => {
    return `${BASE_MONDAY_CODE_URL}/${appId}/storage/connection-string`;
};
