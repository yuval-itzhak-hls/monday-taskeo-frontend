import { z } from 'zod';
import { AppReleaseCategory } from '../../consts/app-release.js';
import { baseResponseHttpMetaDataSchema } from '../schemas/api-service-schemas.js';
import { appReleaseIdSchema, appVersionIdSchema } from '../schemas/general-schemas.js';
import { Region } from '../../types/general/region.js';
export const appReleaseSchema = z.object({
    id: appReleaseIdSchema,
    // eslint-disable-next-line camelcase
    app_version_id: appVersionIdSchema,
    kind: z.string(),
    category: z.nativeEnum(AppReleaseCategory),
    state: z.string(),
    region: z.nativeEnum(Region),
    data: z
        .object({
        url: z.string().optional(),
        latestUrl: z.string().optional(),
        liveUrl: z.string().optional(),
        deploymentState: z.string().optional(),
        sourceUrl: z.string().optional(),
        microFrontendName: z.string().optional(),
    })
        .optional(),
});
export const appReleasesSchema = z
    .object({
    appReleases: z.array(appReleaseSchema),
})
    .merge(baseResponseHttpMetaDataSchema);
